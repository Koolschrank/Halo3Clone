//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""bf9acb4b-7265-4180-bd63-6421c015444b"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""460b2941-1f32-4da1-bb06-c1e234c9648e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""d73276ca-ea1d-4252-8e42-247042ea6de2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""73c3e782-dbc8-48a7-a6b1-f01350ca0cc3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchTeam"",
                    ""type"": ""Button"",
                    ""id"": ""883f2047-3af0-40ab-97ea-3d5281a1db6d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""70d64e94-3e26-4f37-b406-f394f2c1b9a3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""b7d96b75-a88f-4c87-809f-cd9f65ff3eb8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bffd298c-46c8-463a-bd2f-63ea8a2b4cd8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f7ef60ea-76b3-4efb-ba90-26b06db65ce0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""72fb302f-6730-443d-aaaf-172427c0ac4f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bf810776-e8ef-426d-bf1b-1b7d9e11583b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""36995cc3-832d-465b-830d-3b73abeeeb39"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a8bc9df-22dc-48c2-aa1d-a58ab7ce2b53"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58b05081-91ff-4f12-8888-2f36a9472926"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e981620-901e-4b0a-ae90-fb0a42dfc18b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""793b3eff-cc18-4596-910e-1bc254a05a56"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83fb2d38-454e-4c41-878c-1d5db15f6cef"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf2e232a-e9bb-4926-8d3a-b36abbd94125"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ccec6cd-85c8-4985-96d0-89754f90f661"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""SwitchTeam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a210f55-cf60-4312-af8f-fa20f97137b1"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SwitchTeam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerGunPlay_SingleWeapon"",
            ""id"": ""4f8a92e2-57be-4312-881c-933ba75dba4f"",
            ""actions"": [
                {
                    ""name"": ""ShootWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""c2854a4b-8e87-4761-a44f-70cb55057026"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""2971a281-1b30-4621-a565-7df677dba911"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUpWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""95c329c6-ed15-4345-a136-53e07aa40db0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowGranade"",
                    ""type"": ""Button"",
                    ""id"": ""0002c1e8-29be-41a3-a489-25920661aa22"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Melee"",
                    ""type"": ""Button"",
                    ""id"": ""67dc6083-f747-47b4-8a59-01b633fee8e3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""f3f28e24-ca94-495d-a069-3ed3b1ba0a48"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""2cefefc0-c65b-4478-95e6-03e3e297982c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""44fac33e-c0f2-41af-8ef6-2a3bc2bc432e"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""ShootWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ed25dec-2d50-428c-adca-58c280b796ff"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ShootWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa2c1c68-2240-4f5d-ba90-282d3ca58f33"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85ffb750-8b3c-47d4-a0f1-571c3227a52e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17262c52-0095-4ea5-9c8e-593afa4c5718"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUpWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca676902-a87f-45a7-a667-9965b83aec85"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""PickUpWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92748505-275b-4337-a8ea-fb039f61c493"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowGranade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dd6d962-39e0-4b12-9914-777118bc0f52"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""ThrowGranade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d1f9454-8012-4748-9e5b-9d113a88c635"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba78340d-aba9-465a-ac9c-f31e9ea2e46c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe3a7b85-b345-4aa3-a27e-0ad43f84e3c1"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f28ab65a-6254-4f5d-9d48-20b86f1e0249"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5aec6301-45d6-4bc3-a219-7800203f477f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f16ec5f-acc3-47ea-8b0f-fcb3b6bc79e7"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bfe2bea-3e8f-4ea0-bbda-7ea33285301e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c3abc5a-5551-4356-bd5a-edce8edd8680"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerGunPlay_DualWeapons"",
            ""id"": ""77cb1167-0be0-46b4-8a2e-211affd553b9"",
            ""actions"": [
                {
                    ""name"": ""Shoot_Weapon1"",
                    ""type"": ""Button"",
                    ""id"": ""0f4a77fa-d975-4331-9eaa-7e27803d74dd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot_Weapon2"",
                    ""type"": ""Button"",
                    ""id"": ""13b379a7-8789-4a0d-b4db-34bbadfdf326"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload_Weapon1"",
                    ""type"": ""Button"",
                    ""id"": ""ced0da5b-1f36-4d14-83f0-94f21ac8461a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload_Weapon2"",
                    ""type"": ""Button"",
                    ""id"": ""861dae70-7830-4e74-a34c-b8112176487c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUpWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""997fe335-cdc0-4a8b-b8e2-6a1f80db3912"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowGranade"",
                    ""type"": ""Button"",
                    ""id"": ""c8cfe5c1-311b-4ac4-a966-1fbcd9a34ad9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Melee"",
                    ""type"": ""Button"",
                    ""id"": ""91787daa-fa8d-400e-b9d8-77f18bdb6570"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bf1d33e4-50ef-4086-9c38-064a2f6a2d08"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Shoot_Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f1b67b1-618d-4d99-8048-561aac670d35"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Shoot_Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a04569c2-5e55-4f74-ab0e-15ca4bba594c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Shoot_Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62be21ab-f8b6-47d3-bf83-de9c63e1e03a"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Shoot_Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc8cd551-07c5-4045-a347-6e8cc1fa7668"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Reload_Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bbf14e5-f5d5-423e-9122-43f0bd120c7d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Reload_Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bf109a2-8834-4b64-a3cd-0458decc923f"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Reload_Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e3db1bc-c683-473c-9ee8-f5d1fed15c7c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Reload_Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82767387-a592-464a-9270-06558e1c1e38"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUpWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22260d59-75ed-4748-b305-1231df13c8f9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""PickUpWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65826a24-39ef-4ad5-a317-efe3cac3791a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowGranade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c69c108-9b64-49a6-9d17-1ad31bcec308"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""ThrowGranade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6141afdf-4125-417c-ad80-72f2039cdec5"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f58e1d5b-03b5-4de0-9131-1b6aa28ee63b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1aaa927e-329c-473e-930f-e63e66f6acf6"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""QuickMenu"",
            ""id"": ""2d31a3e7-3df3-4236-8b18-cd6537dd8544"",
            ""actions"": [
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""10cd804d-fdbd-43c2-b30d-dfec2a65b5b7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""c5f448b6-a939-4a02-8e3a-2a5acfdfd97e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""88275807-fd5a-4d3f-b14b-8cfa2055e904"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""3fb0100b-1156-4647-9e92-ddfa0c5ffc9d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""951e0810-00c3-4028-a6e7-d153548dc4da"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b4da970-dc9b-4cb6-a295-052fb74f4ffc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""296f41ef-aa21-417f-9d06-5ed3293b54db"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""903ed74a-a175-4cab-b6de-d79b7eacb736"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6686acb8-3ffd-4089-a212-505a0989fc1e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f77c09a2-6983-4300-89a1-8286d0e641b4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c07947e0-6773-44c7-a00e-6b21ca77ea01"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60e37053-7395-4e63-bcfe-54efe3c7e97a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";KeyboardAndMouse"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Aim = m_Player.FindAction("Aim", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_SwitchTeam = m_Player.FindAction("SwitchTeam", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        // PlayerGunPlay_SingleWeapon
        m_PlayerGunPlay_SingleWeapon = asset.FindActionMap("PlayerGunPlay_SingleWeapon", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_ShootWeapon = m_PlayerGunPlay_SingleWeapon.FindAction("ShootWeapon", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_Reload = m_PlayerGunPlay_SingleWeapon.FindAction("Reload", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_PickUpWeapon = m_PlayerGunPlay_SingleWeapon.FindAction("PickUpWeapon", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_ThrowGranade = m_PlayerGunPlay_SingleWeapon.FindAction("ThrowGranade", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_Melee = m_PlayerGunPlay_SingleWeapon.FindAction("Melee", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_Zoom = m_PlayerGunPlay_SingleWeapon.FindAction("Zoom", throwIfNotFound: true);
        m_PlayerGunPlay_SingleWeapon_SwitchWeapon = m_PlayerGunPlay_SingleWeapon.FindAction("SwitchWeapon", throwIfNotFound: true);
        // PlayerGunPlay_DualWeapons
        m_PlayerGunPlay_DualWeapons = asset.FindActionMap("PlayerGunPlay_DualWeapons", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_Shoot_Weapon1 = m_PlayerGunPlay_DualWeapons.FindAction("Shoot_Weapon1", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_Shoot_Weapon2 = m_PlayerGunPlay_DualWeapons.FindAction("Shoot_Weapon2", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_Reload_Weapon1 = m_PlayerGunPlay_DualWeapons.FindAction("Reload_Weapon1", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_Reload_Weapon2 = m_PlayerGunPlay_DualWeapons.FindAction("Reload_Weapon2", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_PickUpWeapon = m_PlayerGunPlay_DualWeapons.FindAction("PickUpWeapon", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_ThrowGranade = m_PlayerGunPlay_DualWeapons.FindAction("ThrowGranade", throwIfNotFound: true);
        m_PlayerGunPlay_DualWeapons_Melee = m_PlayerGunPlay_DualWeapons.FindAction("Melee", throwIfNotFound: true);
        // QuickMenu
        m_QuickMenu = asset.FindActionMap("QuickMenu", throwIfNotFound: true);
        m_QuickMenu_Left = m_QuickMenu.FindAction("Left", throwIfNotFound: true);
        m_QuickMenu_Right = m_QuickMenu.FindAction("Right", throwIfNotFound: true);
        m_QuickMenu_Down = m_QuickMenu.FindAction("Down", throwIfNotFound: true);
        m_QuickMenu_Up = m_QuickMenu.FindAction("Up", throwIfNotFound: true);
    }

    ~@Controller()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, Controller.Player.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerGunPlay_SingleWeapon.enabled, "This will cause a leak and performance issues, Controller.PlayerGunPlay_SingleWeapon.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerGunPlay_DualWeapons.enabled, "This will cause a leak and performance issues, Controller.PlayerGunPlay_DualWeapons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_QuickMenu.enabled, "This will cause a leak and performance issues, Controller.QuickMenu.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Aim;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_SwitchTeam;
    private readonly InputAction m_Player_Crouch;
    public struct PlayerActions
    {
        private @Controller m_Wrapper;
        public PlayerActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Aim => m_Wrapper.m_Player_Aim;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @SwitchTeam => m_Wrapper.m_Player_SwitchTeam;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @SwitchTeam.started += instance.OnSwitchTeam;
            @SwitchTeam.performed += instance.OnSwitchTeam;
            @SwitchTeam.canceled += instance.OnSwitchTeam;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @SwitchTeam.started -= instance.OnSwitchTeam;
            @SwitchTeam.performed -= instance.OnSwitchTeam;
            @SwitchTeam.canceled -= instance.OnSwitchTeam;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // PlayerGunPlay_SingleWeapon
    private readonly InputActionMap m_PlayerGunPlay_SingleWeapon;
    private List<IPlayerGunPlay_SingleWeaponActions> m_PlayerGunPlay_SingleWeaponActionsCallbackInterfaces = new List<IPlayerGunPlay_SingleWeaponActions>();
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_ShootWeapon;
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_Reload;
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_PickUpWeapon;
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_ThrowGranade;
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_Melee;
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_Zoom;
    private readonly InputAction m_PlayerGunPlay_SingleWeapon_SwitchWeapon;
    public struct PlayerGunPlay_SingleWeaponActions
    {
        private @Controller m_Wrapper;
        public PlayerGunPlay_SingleWeaponActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShootWeapon => m_Wrapper.m_PlayerGunPlay_SingleWeapon_ShootWeapon;
        public InputAction @Reload => m_Wrapper.m_PlayerGunPlay_SingleWeapon_Reload;
        public InputAction @PickUpWeapon => m_Wrapper.m_PlayerGunPlay_SingleWeapon_PickUpWeapon;
        public InputAction @ThrowGranade => m_Wrapper.m_PlayerGunPlay_SingleWeapon_ThrowGranade;
        public InputAction @Melee => m_Wrapper.m_PlayerGunPlay_SingleWeapon_Melee;
        public InputAction @Zoom => m_Wrapper.m_PlayerGunPlay_SingleWeapon_Zoom;
        public InputAction @SwitchWeapon => m_Wrapper.m_PlayerGunPlay_SingleWeapon_SwitchWeapon;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGunPlay_SingleWeapon; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGunPlay_SingleWeaponActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerGunPlay_SingleWeaponActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerGunPlay_SingleWeaponActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerGunPlay_SingleWeaponActionsCallbackInterfaces.Add(instance);
            @ShootWeapon.started += instance.OnShootWeapon;
            @ShootWeapon.performed += instance.OnShootWeapon;
            @ShootWeapon.canceled += instance.OnShootWeapon;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @PickUpWeapon.started += instance.OnPickUpWeapon;
            @PickUpWeapon.performed += instance.OnPickUpWeapon;
            @PickUpWeapon.canceled += instance.OnPickUpWeapon;
            @ThrowGranade.started += instance.OnThrowGranade;
            @ThrowGranade.performed += instance.OnThrowGranade;
            @ThrowGranade.canceled += instance.OnThrowGranade;
            @Melee.started += instance.OnMelee;
            @Melee.performed += instance.OnMelee;
            @Melee.canceled += instance.OnMelee;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
            @SwitchWeapon.started += instance.OnSwitchWeapon;
            @SwitchWeapon.performed += instance.OnSwitchWeapon;
            @SwitchWeapon.canceled += instance.OnSwitchWeapon;
        }

        private void UnregisterCallbacks(IPlayerGunPlay_SingleWeaponActions instance)
        {
            @ShootWeapon.started -= instance.OnShootWeapon;
            @ShootWeapon.performed -= instance.OnShootWeapon;
            @ShootWeapon.canceled -= instance.OnShootWeapon;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @PickUpWeapon.started -= instance.OnPickUpWeapon;
            @PickUpWeapon.performed -= instance.OnPickUpWeapon;
            @PickUpWeapon.canceled -= instance.OnPickUpWeapon;
            @ThrowGranade.started -= instance.OnThrowGranade;
            @ThrowGranade.performed -= instance.OnThrowGranade;
            @ThrowGranade.canceled -= instance.OnThrowGranade;
            @Melee.started -= instance.OnMelee;
            @Melee.performed -= instance.OnMelee;
            @Melee.canceled -= instance.OnMelee;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
            @SwitchWeapon.started -= instance.OnSwitchWeapon;
            @SwitchWeapon.performed -= instance.OnSwitchWeapon;
            @SwitchWeapon.canceled -= instance.OnSwitchWeapon;
        }

        public void RemoveCallbacks(IPlayerGunPlay_SingleWeaponActions instance)
        {
            if (m_Wrapper.m_PlayerGunPlay_SingleWeaponActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerGunPlay_SingleWeaponActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerGunPlay_SingleWeaponActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerGunPlay_SingleWeaponActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerGunPlay_SingleWeaponActions @PlayerGunPlay_SingleWeapon => new PlayerGunPlay_SingleWeaponActions(this);

    // PlayerGunPlay_DualWeapons
    private readonly InputActionMap m_PlayerGunPlay_DualWeapons;
    private List<IPlayerGunPlay_DualWeaponsActions> m_PlayerGunPlay_DualWeaponsActionsCallbackInterfaces = new List<IPlayerGunPlay_DualWeaponsActions>();
    private readonly InputAction m_PlayerGunPlay_DualWeapons_Shoot_Weapon1;
    private readonly InputAction m_PlayerGunPlay_DualWeapons_Shoot_Weapon2;
    private readonly InputAction m_PlayerGunPlay_DualWeapons_Reload_Weapon1;
    private readonly InputAction m_PlayerGunPlay_DualWeapons_Reload_Weapon2;
    private readonly InputAction m_PlayerGunPlay_DualWeapons_PickUpWeapon;
    private readonly InputAction m_PlayerGunPlay_DualWeapons_ThrowGranade;
    private readonly InputAction m_PlayerGunPlay_DualWeapons_Melee;
    public struct PlayerGunPlay_DualWeaponsActions
    {
        private @Controller m_Wrapper;
        public PlayerGunPlay_DualWeaponsActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot_Weapon1 => m_Wrapper.m_PlayerGunPlay_DualWeapons_Shoot_Weapon1;
        public InputAction @Shoot_Weapon2 => m_Wrapper.m_PlayerGunPlay_DualWeapons_Shoot_Weapon2;
        public InputAction @Reload_Weapon1 => m_Wrapper.m_PlayerGunPlay_DualWeapons_Reload_Weapon1;
        public InputAction @Reload_Weapon2 => m_Wrapper.m_PlayerGunPlay_DualWeapons_Reload_Weapon2;
        public InputAction @PickUpWeapon => m_Wrapper.m_PlayerGunPlay_DualWeapons_PickUpWeapon;
        public InputAction @ThrowGranade => m_Wrapper.m_PlayerGunPlay_DualWeapons_ThrowGranade;
        public InputAction @Melee => m_Wrapper.m_PlayerGunPlay_DualWeapons_Melee;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGunPlay_DualWeapons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGunPlay_DualWeaponsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerGunPlay_DualWeaponsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerGunPlay_DualWeaponsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerGunPlay_DualWeaponsActionsCallbackInterfaces.Add(instance);
            @Shoot_Weapon1.started += instance.OnShoot_Weapon1;
            @Shoot_Weapon1.performed += instance.OnShoot_Weapon1;
            @Shoot_Weapon1.canceled += instance.OnShoot_Weapon1;
            @Shoot_Weapon2.started += instance.OnShoot_Weapon2;
            @Shoot_Weapon2.performed += instance.OnShoot_Weapon2;
            @Shoot_Weapon2.canceled += instance.OnShoot_Weapon2;
            @Reload_Weapon1.started += instance.OnReload_Weapon1;
            @Reload_Weapon1.performed += instance.OnReload_Weapon1;
            @Reload_Weapon1.canceled += instance.OnReload_Weapon1;
            @Reload_Weapon2.started += instance.OnReload_Weapon2;
            @Reload_Weapon2.performed += instance.OnReload_Weapon2;
            @Reload_Weapon2.canceled += instance.OnReload_Weapon2;
            @PickUpWeapon.started += instance.OnPickUpWeapon;
            @PickUpWeapon.performed += instance.OnPickUpWeapon;
            @PickUpWeapon.canceled += instance.OnPickUpWeapon;
            @ThrowGranade.started += instance.OnThrowGranade;
            @ThrowGranade.performed += instance.OnThrowGranade;
            @ThrowGranade.canceled += instance.OnThrowGranade;
            @Melee.started += instance.OnMelee;
            @Melee.performed += instance.OnMelee;
            @Melee.canceled += instance.OnMelee;
        }

        private void UnregisterCallbacks(IPlayerGunPlay_DualWeaponsActions instance)
        {
            @Shoot_Weapon1.started -= instance.OnShoot_Weapon1;
            @Shoot_Weapon1.performed -= instance.OnShoot_Weapon1;
            @Shoot_Weapon1.canceled -= instance.OnShoot_Weapon1;
            @Shoot_Weapon2.started -= instance.OnShoot_Weapon2;
            @Shoot_Weapon2.performed -= instance.OnShoot_Weapon2;
            @Shoot_Weapon2.canceled -= instance.OnShoot_Weapon2;
            @Reload_Weapon1.started -= instance.OnReload_Weapon1;
            @Reload_Weapon1.performed -= instance.OnReload_Weapon1;
            @Reload_Weapon1.canceled -= instance.OnReload_Weapon1;
            @Reload_Weapon2.started -= instance.OnReload_Weapon2;
            @Reload_Weapon2.performed -= instance.OnReload_Weapon2;
            @Reload_Weapon2.canceled -= instance.OnReload_Weapon2;
            @PickUpWeapon.started -= instance.OnPickUpWeapon;
            @PickUpWeapon.performed -= instance.OnPickUpWeapon;
            @PickUpWeapon.canceled -= instance.OnPickUpWeapon;
            @ThrowGranade.started -= instance.OnThrowGranade;
            @ThrowGranade.performed -= instance.OnThrowGranade;
            @ThrowGranade.canceled -= instance.OnThrowGranade;
            @Melee.started -= instance.OnMelee;
            @Melee.performed -= instance.OnMelee;
            @Melee.canceled -= instance.OnMelee;
        }

        public void RemoveCallbacks(IPlayerGunPlay_DualWeaponsActions instance)
        {
            if (m_Wrapper.m_PlayerGunPlay_DualWeaponsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerGunPlay_DualWeaponsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerGunPlay_DualWeaponsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerGunPlay_DualWeaponsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerGunPlay_DualWeaponsActions @PlayerGunPlay_DualWeapons => new PlayerGunPlay_DualWeaponsActions(this);

    // QuickMenu
    private readonly InputActionMap m_QuickMenu;
    private List<IQuickMenuActions> m_QuickMenuActionsCallbackInterfaces = new List<IQuickMenuActions>();
    private readonly InputAction m_QuickMenu_Left;
    private readonly InputAction m_QuickMenu_Right;
    private readonly InputAction m_QuickMenu_Down;
    private readonly InputAction m_QuickMenu_Up;
    public struct QuickMenuActions
    {
        private @Controller m_Wrapper;
        public QuickMenuActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Left => m_Wrapper.m_QuickMenu_Left;
        public InputAction @Right => m_Wrapper.m_QuickMenu_Right;
        public InputAction @Down => m_Wrapper.m_QuickMenu_Down;
        public InputAction @Up => m_Wrapper.m_QuickMenu_Up;
        public InputActionMap Get() { return m_Wrapper.m_QuickMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuickMenuActions set) { return set.Get(); }
        public void AddCallbacks(IQuickMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_QuickMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_QuickMenuActionsCallbackInterfaces.Add(instance);
            @Left.started += instance.OnLeft;
            @Left.performed += instance.OnLeft;
            @Left.canceled += instance.OnLeft;
            @Right.started += instance.OnRight;
            @Right.performed += instance.OnRight;
            @Right.canceled += instance.OnRight;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
        }

        private void UnregisterCallbacks(IQuickMenuActions instance)
        {
            @Left.started -= instance.OnLeft;
            @Left.performed -= instance.OnLeft;
            @Left.canceled -= instance.OnLeft;
            @Right.started -= instance.OnRight;
            @Right.performed -= instance.OnRight;
            @Right.canceled -= instance.OnRight;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
        }

        public void RemoveCallbacks(IQuickMenuActions instance)
        {
            if (m_Wrapper.m_QuickMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IQuickMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_QuickMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_QuickMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public QuickMenuActions @QuickMenu => new QuickMenuActions(this);
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSwitchTeam(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
    }
    public interface IPlayerGunPlay_SingleWeaponActions
    {
        void OnShootWeapon(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnPickUpWeapon(InputAction.CallbackContext context);
        void OnThrowGranade(InputAction.CallbackContext context);
        void OnMelee(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnSwitchWeapon(InputAction.CallbackContext context);
    }
    public interface IPlayerGunPlay_DualWeaponsActions
    {
        void OnShoot_Weapon1(InputAction.CallbackContext context);
        void OnShoot_Weapon2(InputAction.CallbackContext context);
        void OnReload_Weapon1(InputAction.CallbackContext context);
        void OnReload_Weapon2(InputAction.CallbackContext context);
        void OnPickUpWeapon(InputAction.CallbackContext context);
        void OnThrowGranade(InputAction.CallbackContext context);
        void OnMelee(InputAction.CallbackContext context);
    }
    public interface IQuickMenuActions
    {
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
    }
}
